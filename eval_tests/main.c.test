/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c.test                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rodrodri <rodrodri@student.hive.fi >       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/01/05 13:20:00 by rodrodri          #+#    #+#             */
/*   Updated: 2022/01/15 19:17:30 by rodrodri         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include "ft_printf.h"
#include "debug.h"

int	main(void)
{
#ifdef PERCENT_TEST
	printf("Testing percent sign (%%%%)\n");
	printf(" (std) returns: %d\n",  printf("|%%|") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%%|") - 2);

	printf("\nTesting percent sign followed by a string (%%%%%%s)\n");
	printf(" (std) returns: %d\n",  printf("|%%%s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%%%s|", "hello") - 2);

	printf("\nTesting percent sign with some directives (%%-4.4%%)\n");
	printf(" (std) returns: %d\n",     printf("|%-4.4%|") - 2);
	printf(" (ft_) returns: %d\n",  ft_printf("|%-4.4%|") - 2);

	printf("\nTesting percent sign with some directives (%%*.*%%)\n");
	printf(" (std) returns: %d\n",     printf("|%*.*%|", 2, 2) - 2);
	printf(" (ft_) returns: %d\n",  ft_printf("|%*.*%|", 2, 2) - 2);
#endif
#ifdef CHAR_TEST
	printf("Testing barebones '%%c' specifier\n");
	printf(" (std) returns: %d\n",    printf("|%c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%c|", 'x') - 2);

	printf("\nTesting width directive (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%3c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%3c|", 'x') - 2);
	printf(" (std) returns: %d\n",    printf("|%-3c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-3c|", 'x') - 2);

	printf("\nTesting width with a '*' (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%*c|", 3, 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*c|", 3, 'x') - 2);
	printf(" (std) returns: %d\n",    printf("|%-*c|", 3, 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*c|", 3, 'x') - 2);
#endif
#ifdef STRINGS_TEST
	printf("Testing string without conversion specification\n");
	printf(" (std) returns: %d\n",    printf("|hello|") - 2); // subtract the two '|'
	printf(" (ft_) returns: %d\n", ft_printf("|hello|") - 2);

	printf("\nTesting barebones string specifier\n");
	printf(" (std) returns: %d\n",  printf("|%s|", "hello string") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%s|", "hello string") - 2);

	printf("\nTesting width directive (right and left alignment)\n");
	printf(" (std) returns: %d\n", printf("|%10s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%10s|", "hello") - 2);
	printf(" (std) returns: %d\n", printf("|%-10s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-10s|", "hello") - 2);

	printf("\nTesting width directive using '*' (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%*s|", 10, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*s|", 10, "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-*s|", 10, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*s|", 10, "hello") - 2);

	printf("\nTesting precision directive with a string\n");
	printf(" (std) returns: %d\n",    printf("|%.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%.4s|", "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-.4s|", "hello") - 2);

	printf("\nTesting width and precision directives with a string\n");
	printf(" (std) returns: %d\n",    printf("|%10.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%10.4s|", "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-10.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-10.4s|", "hello") - 2);

	printf("\nTesting width and precision directives using '*'\n");
	printf(" (std) returns: %d\n",    printf("|%*.*s|", 10, 4, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*.*s|", 10, 4, "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-*.*s|", 10, 4, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*.*s|", 10, 4, "hello") - 2);
#endif
#ifdef ADDR_TEST
	int	var;
	printf("Testing printing simple address ('%%p')\n");
	printf(" (std) returns: %d\n",    printf("|%p|", &var) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%p|", &var) - 2);

	printf("\n----------------------------------------------------\n");
	printf("(No tests for '+ 0' flags -> undefined behaviour!!)\n");
	printf("\n----------------------------------------------------\n");
	printf("Width. Right aligned \n");
	printf(" (std) returns: %d\n",    printf("|%20p|", &var) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%20p|", &var) - 2);
	printf("Width Argument (*). Right aligned.\n");
	printf(" (std) returns: %d\n",    printf("|%*p|", 20, &var) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*p|", 20, &var) - 2);

	printf("\n----------------------------------------------------\n");
	printf("Width. Left aligned.\n");
	printf(" (std) returns: %d\n",    printf("|%-20p|", &var) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-20p|", &var) - 2);
	printf("Width Argument (*). Left aligned.\n");
	printf(" (std) returns: %d\n",    printf("|%-*p|", 20, &var) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*p|", 20, &var) - 2);
#endif

#ifdef INT_TEST
	printf("Testing barebones 'int' specifiers ('%%d and %%i')\n");
	printf(" (std) returns: %d\n",    printf("|%d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%i|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%i|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%d|", -42) - 2);
	printf(" (std) returns: %d\n",    printf("|%i|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%i|", -42) - 2);

	printf("\n----------------------------------------------------\n");
	printf("No Width. ' ' flag. Right aligned (no '-' flag possible).\n");
	printf(" (std) returns: %d\n",    printf("|% d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% d|", -42) - 2);

	printf("\nNo Width. '+' flag. Right aligned (no ' -' flags possible).\n");
	printf(" (std) returns: %d\n",    printf("|%+d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+d|", -42) - 2);

	printf("\nNo Width.'0' flag. Right aligned (no '-' flag possible). \n");
	printf(" (std) returns: %d\n",    printf("|%0d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%0d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%0d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0d|", -42) - 2);

	printf("\nNo Width. ' 0' flags. Right aligned (no '-' flag possible).\n");
	printf(" (std) returns: %d\n",    printf("|% 0d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% 0d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% 0d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0d|", -42) - 2);

	printf("\n---------------------------------------------\n");
	printf("Width directive. Right aligned (No flags).\n");
	printf(" (std) returns: %d\n",    printf("|%4d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%4d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%4d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4d|", -42) - 2);

	printf("\nWidth directive. Right aligned (' ' flag).\n");
	printf(" (std) returns: %d\n",    printf("|% 3d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% 3d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% 3d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3d|", -42) - 2);

	printf("\nWidth directive. Right aligned ('+' flag)\n");
	printf(" (std) returns: %d\n",    printf("|%+4d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+4d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+4d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4d|", -42) - 2);

	printf("\nWidth directive. Right aligned ('0' flag).\n");
	printf(" (std) returns: %d\n",    printf("|%04d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%04d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%04d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04d|", -42) - 2);

	printf("\nWidth directive. Right aligned ('0+' flags).\n");
	printf(" (std) returns: %d\n",    printf("|%+04d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04d|", -42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04d|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04d|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04d|", 10) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04d|", 10) - 2);

	printf("\n---------------------------------------------\n");
	printf("Width directive. Left aligned ('-' flag).\n");
	printf(" (std) returns: %d\n",    printf("|%-4d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-4d|", 42) - 2);

	printf("\nWidth directive. Left aligned ('-+' flags)\n");
	printf(" (std) returns: %d\n",    printf("|%-+4d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-+4d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%-+4d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-+4d|", -42) - 2);

	printf("\nWidth directive. Left aligned ('- ' flag)\n");
	printf(" (std) returns: %d\n",    printf("|% -4d|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% -4d|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% -4d|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% -4d|", -42) - 2);

	printf("\nWidth directive ('-0' flags, '0' is ignored)\n");
	// printf(" (std) returns: %d\n",    printf("|%-04d|", -42) - 2);
	// printf(" (std) returns: %d\n",    printf("|%-04d|", 42) - 2);

	// printf("\n---------------------------------------------\n");
	// printf("\nTest length directives\n");
	// printf(" (std) returns: %d\n", ft_printf("|%lld|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%10.3d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%#.8d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%hhd|") - 2);
#endif
#ifdef OCTAL_TEST
	printf("Testing barebones octal specifier ('%%o')\n");
	printf(" (std) returns: %d\n",    printf("|%o|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%o|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%o|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%o|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%o|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%o|", -42) - 2);

	printf("\n----------------------------------------------------\n");
	printf("(No tests for '+ ' flags -> undefined behaviour!!)");
	printf("\n----------------------------------------------------\n");

	printf("No Width. '0' flag. Right aligned.\n");
	printf(" (std) returns: %d\n",    printf("|%0o|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0o|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%0o|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0o|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%0o|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0o|", -42) - 2);
	printf("\n----------------------------------------------------\n");

	printf("Width. Right aligned \n");
	printf(" (std) returns: %d\n",    printf("|%4o|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4o|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%4o|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4o|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%4o|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4o|", -42) - 2);
	printf("\n----------------------------------------------------\n");

	printf("\nWidth directive. Right aligned ('0' flag)\n");
	printf(" (std) returns: %d\n",    printf("|%04o|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04o|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%04o|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04o|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%04o|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04o|", -42) - 2);

	printf("Width Argument (*). Right aligned.\n");
	printf(" (std) returns: %d\n",    printf("|%*o|", 5, 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*o|", 5, 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%*o|", 5, 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*o|", 5, 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%*o|", 5, -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*o|", 5, -42) - 2);
	printf("\n---------------------------------------------\n");

	printf("Width directive. Left aligned ('-' flag).\n");
	printf(" (std) returns: %d\n",    printf("|%-4o|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-4o|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%-4o|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-4o|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%-4o|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-4o|", -42) - 2);
#endif
	#ifdef LEAKS
	system("leaks test_printf");
	#endif
	return (0);
}
/* vi: filetype=c */