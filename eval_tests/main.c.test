/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c.test                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rodrodri <rodrodri@student.hive.fi >       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/01/05 13:20:00 by rodrodri          #+#    #+#             */
/*   Updated: 2022/01/12 22:42:06 by rodrodri         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include "ft_printf.h"
#include "debug.h"

int	main(void)
{
#ifdef PERCENT_TEST
	printf("Testing percent sign (%%%%)\n");
	printf(" (std) returns: %d\n",  printf("|%%|") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%%|") - 2);

	printf("\nTesting percent sign followed by a string (%%%%%%s)\n");
	printf(" (std) returns: %d\n",  printf("|%%%s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%%%s|", "hello") - 2);

	printf("\nTesting percent sign with some directives (%%-4.4%%)\n");
	printf(" (std) returns: %d\n",     printf("|%-4.4%|") - 2);
	printf(" (ft_) returns: %d\n",  ft_printf("|%-4.4%|") - 2);

	printf("\nTesting percent sign with some directives (%%*.*%%)\n");
	printf(" (std) returns: %d\n",     printf("|%*.*%|", 2, 2) - 2);
	printf(" (ft_) returns: %d\n",  ft_printf("|%*.*%|", 2, 2) - 2);
#endif
#ifdef CHAR_TEST
	printf("Testing barebones '%%c' specifier\n");
	printf(" (std) returns: %d\n",    printf("|%c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%c|", 'x') - 2);

	printf("\nTesting width directive (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%3c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%3c|", 'x') - 2);
	printf(" (std) returns: %d\n",    printf("|%-3c|", 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-3c|", 'x') - 2);

	printf("\nTesting width with a '*' (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%*c|", 3, 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*c|", 3, 'x') - 2);
	printf(" (std) returns: %d\n",    printf("|%-*c|", 3, 'x') - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*c|", 3, 'x') - 2);
#endif
#ifdef STRINGS_TEST
	printf("Testing string without conversion specification\n");
	printf(" (std) returns: %d\n",    printf("|hello|") - 2); // subtract the two '|'
	printf(" (ft_) returns: %d\n", ft_printf("|hello|") - 2);

	printf("\nTesting barebones string specifier\n");
	printf(" (std) returns: %d\n",  printf("|%s|", "hello string") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%s|", "hello string") - 2);

	printf("\nTesting width directive (right and left alignment)\n");
	printf(" (std) returns: %d\n", printf("|%10s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%10s|", "hello") - 2);
	printf(" (std) returns: %d\n", printf("|%-10s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-10s|", "hello") - 2);

	printf("\nTesting width directive using '*' (right and left alignment)\n");
	printf(" (std) returns: %d\n",    printf("|%*s|", 10, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*s|", 10, "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-*s|", 10, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*s|", 10, "hello") - 2);

	printf("\nTesting precision directive with a string\n");
	printf(" (std) returns: %d\n",    printf("|%.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%.4s|", "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-.4s|", "hello") - 2);

	printf("\nTesting width and precision directives with a string\n");
	printf(" (std) returns: %d\n",    printf("|%10.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%10.4s|", "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-10.4s|", "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-10.4s|", "hello") - 2);

	printf("\nTesting width and precision directives using '*'\n");
	printf(" (std) returns: %d\n",    printf("|%*.*s|", 10, 4, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%*.*s|", 10, 4, "hello") - 2);
	printf(" (std) returns: %d\n",    printf("|%-*.*s|", 10, 4, "hello") - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-*.*s|", 10, 4, "hello") - 2);
#endif
	// printf(" (std) returns: %d\n", ft_printf("|%# -d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%lld|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%10.3d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%#.8d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%hhd|") - 2);

	#ifdef LEAKS
	system("leaks test_printf");
	#endif
	return (0);
}
/* vi: filetype=c */